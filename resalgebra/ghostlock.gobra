// Copyright 2025 ETH Zurich
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// +gobra

// TODO: explain why we need and what assumptions we make
package resalgebra

type GhostMutex struct {
	privateFields int
}

pred (m gpointer[GhostMutex]) LockP()

ghost
requires acc(m.LockP(), _)
decreases _
pure func (m gpointer[GhostMutex]) LockInv() pred()

ghost
requires inv() && acc(m) && *m == GhostMutex{}
ensures  m.LockP() && m.LockInv() == inv
decreases
func (m gpointer[GhostMutex]) SetInv(inv pred())

ghost
requires acc(m.LockP(), _)
ensures  m.LockP() && m.LockInv()()
decreases _
func (m gpointer[GhostMutex]) Lock()

ghost
requires acc(m.LockP(), _) && m.LockInv()()
ensures  m.LockP()
decreases _
func (m gpointer[GhostMutex]) Unlock()